---
apiVersion: elasticsearch.k8s.elastic.co/v1
kind: Elasticsearch
metadata:
  name: elasticsearch
  labels:
    app.kubernetes.io/name: eck-logstash
    app.kubernets.io/component: elasticsearch
spec:
  version: 7.9.2
  nodeSets:
    - name: default
      count: 1
      config:
        node.store.allow_mmap: false
---
apiVersion: kibana.k8s.elastic.co/v1
kind: Kibana
metadata:
  name: kibana
  labels:
    app.kubernetes.io/name: eck-logstash
    app.kubernets.io/component: kibana
spec:
  version: 7.9.2
  count: 1
  elasticsearchRef:
    name: elasticsearch
---
apiVersion: v1
kind: ConfigMap

metadata:
  name: logstash-config
  labels:
    app.kubernetes.io/name: eck-logstash
    app.kubernets.io/component: logstash
data:
  logstash.yml: |
    http.host: "0.0.0.0"
    path.config: /usr/share/logstash/pipeline
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: logstash-pipeline
  labels:
    app.kubernetes.io/name: eck-logstash
    app.kubernets.io/component: logstash
data:
  logstash.conf: |
    input {
      http_poller {
        urls => {
          url1 => "http://realtime.portauthority.org/bustime/api/v3/getvehicles?key=hC5Di7VSYU3hjmw2gAqHtKdec&rt=65,67,69,7,71,71A,71B,71C,71D,74&format=json"
        }
        schedule => {
          every => "2m"
        }
        codec => "json"
      }
    }
    
    filter {
      split {
        field => "[bustime-response][vehicle]"
      }
      mutate {
        rename => {
          "[bustime-response][vehicle][vid]" => "vid"
          "[bustime-response][vehicle][rtpidatafeed]" => "rtpidatafeed"
          "[bustime-response][vehicle][tmstmp]" => "tmstmp"
          "[bustime-response][vehicle][lat]" => "lat"
          "[bustime-response][vehicle][lon]" => "lon"
          "[bustime-response][vehicle][hdg]" => "hdg"
          "[bustime-response][vehicle][pid]" => "pid"
          "[bustime-response][vehicle][rt]" => "rt"
          "[bustime-response][vehicle][des]" => "des"
          "[bustime-response][vehicle][pdist]" => "pdist"
          "[bustime-response][vehicle][dly]" => "dly"
          "[bustime-response][vehicle][spd]" => "spd"
          "[bustime-response][vehicle][tatripid]" => "tatripid"
          "[bustime-response][vehicle][origtatripno]" => "origtatripno"
          "[bustime-response][vehicle][tablockid]" => "tablockid"
          "[bustime-response][vehicle][zone]" => "zone"
          "[bustime-response][vehicle][mode]" => "mode"
          "[bustime-response][vehicle][psgld]" => "psgld"
        }
      }
      mutate {
        add_field => { "[location-map][lat]" => "%{lat}" }
        add_field => { "[location-map][lon]" => "%{lon}" }
      }
    }

    output {
      elasticsearch {
        hosts => [ "${ES_HOSTS}" ]
        user => "${ES_USER}"
        password => "${ES_PASSWORD}"
        cacert => '/etc/logstash/certificates/ca.crt'
        index => "transit-pittsburgh-%{+YYYY.MM.dd}"
      }
    }
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: logstash
  labels:
    app.kubernetes.io/name: eck-logstash
    app.kubernets.io/component: logstash
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: eck-logstash
      app.kubernets.io/component: logstash
  template:
    metadata:
      labels:
        app.kubernetes.io/name: eck-logstash
        app.kubernets.io/component: logstash
    spec:
      containers:
        - name: logstash
          image: docker.elastic.co/logstash/logstash:7.9.2
          ports:
            - name: "tcp-beats"
              containerPort: 5044
          env:
            - name: ES_HOSTS
              value: "https://elasticsearch-es-http.default.svc:9200"
            - name: ES_USER
              value: "elastic"
            - name: ES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: elasticsearch-es-elastic-user
                  key: elastic
          volumeMounts:
            - name: config-volume
              mountPath: /usr/share/logstash/config
            - name: pipeline-volume
              mountPath: /usr/share/logstash/pipeline
            - name: ca-certs
              mountPath: /etc/logstash/certificates
              readOnly: true
      volumes:
        - name: config-volume
          configMap:
            name: logstash-config
        - name: pipeline-volume
          configMap:
            name: logstash-pipeline
        - name: ca-certs
          secret:
            secretName: elasticsearch-es-http-certs-public
---
apiVersion: v1
kind: Service
metadata:
  name: logstash
  labels:
    app.kubernetes.io/name: eck-logstash
    app.kubernets.io/component: logstash
spec:
  ports:
    - name: "tcp-beats"
      port: 5044
      targetPort: 5044
  selector:
    app.kubernetes.io/name: eck-logstash
    app.kubernets.io/component: logstash
# ---
# apiVersion: beat.k8s.elastic.co/v1beta1
# kind: Beat
# metadata:
#   name: filebeat
#   labels:
#     app.kubernetes.io/name: eck-logstash
#     app.kubernets.io/component: filebeat
# spec:
#   type: filebeat
#   version: 7.9.2
#   config:
#     filebeat.inputs:
#       - type: log
#         paths:
#           - /data/logstash-tutorial.log
#     output.logstash:
#       hosts: ["logstash.default.svc:5044"]
#   deployment:
#     podTemplate:
#       metadata:
#         labels:
#           app.kubernetes.io/name: eck-logstash
#           app.kubernets.io/component: filebeat
#       spec:
#         automountServiceAccountToken: true
#         initContainers:
#           - name: download-tutorial
#             image: curlimages/curl
#             command: ["/bin/sh"]
#             args: ["-c", "curl -L https://download.elastic.co/demos/logstash/gettingstarted/logstash-tutorial.log.gz | gunzip -c > /data/logstash-tutorial.log"]
#             volumeMounts:
#               - name: data
#                 mountPath: /data
#         containers:
#           - name: filebeat
#             securityContext:
#               runAsUser: 0
#             volumeMounts:
#               - name: data
#                 mountPath: /data
#         volumes:
#           - name: data
#             emptydir: {}
