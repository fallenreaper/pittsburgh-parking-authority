---
apiVersion: elasticsearch.k8s.elastic.co/v1
kind: Elasticsearch
metadata:
  name: elasticsearch
  labels:
    app.kubernetes.io/name: eck-logstash
    app.kubernets.io/component: elasticsearch
spec:
  version: 7.9.2
  nodeSets:
    - name: default
      count: 1
      config:
        node.store.allow_mmap: false
---
apiVersion: kibana.k8s.elastic.co/v1
kind: Kibana
metadata:
  name: kibana
  labels:
    app.kubernetes.io/name: eck-logstash
    app.kubernets.io/component: kibana
spec:
  version: 7.9.2
  count: 1
  elasticsearchRef:
    name: elasticsearch
---
apiVersion: v1
kind: ConfigMap

metadata:
  name: logstash-config
  labels:
    app.kubernetes.io/name: eck-logstash
    app.kubernets.io/component: logstash
data:
  logstash.yml: |
    http.host: "0.0.0.0"
    path.config: /usr/share/logstash/pipeline
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: logstash-pipeline
  labels:
    app.kubernetes.io/name: eck-logstash
    app.kubernets.io/component: logstash
data:
  logstash.conf: |
    input {
      http_poller {
        urls => {
          url1 => 'http://realtime.portauthority.org/bustime/api/v3/getvehicles?key=${TRANSIT_ID}&rt=BLUE,RED,SLVR,1,11,12,13,14,15,16&format=json'
          url2 => 'http://realtime.portauthority.org/bustime/api/v3/getvehicles?key=${TRANSIT_ID}&rt=17,18,19L,2,20,21,22,24,26,27&format=json'
          url3 => 'http://realtime.portauthority.org/bustime/api/v3/getvehicles?key=${TRANSIT_ID}&rt=28X,29,31,36,38,39,4,40,41,43&format=json'
          url4 => 'http://realtime.portauthority.org/bustime/api/v3/getvehicles?key=${TRANSIT_ID}&rt=44,48,51,51L,52L,53,53L,54,55,56&format=json'
          url5 => 'http://realtime.portauthority.org/bustime/api/v3/getvehicles?key=${TRANSIT_ID}&rt=57,58,59,6,60,61A,61B,61C,61D,64&format=json'
          url6 => 'http://realtime.portauthority.org/bustime/api/v3/getvehicles?key=${TRANSIT_ID}&rt=65,67,69,7,71,71A,71B,71C,71D,74&format=json'
          url7 => 'http://realtime.portauthority.org/bustime/api/v3/getvehicles?key=${TRANSIT_ID}&rt=75,77,79,8,81,82,83,86,87,88&format=json'
          url8 => 'http://realtime.portauthority.org/bustime/api/v3/getvehicles?key=${TRANSIT_ID}&rt=89,91,93,G2,G3,G31,O1,O12,O5,P1&format=json'
          url9 => 'http://realtime.portauthority.org/bustime/api/v3/getvehicles?key=${TRANSIT_ID}&rt=P10,P12,P13,P16,P17,P2,P3,P67,P68,P69&format=json'
          url10 => 'http://realtime.portauthority.org/bustime/api/v3/getvehicles?key=${TRANSIT_ID}&rt=P7,P71,P76,P78,Y1,Y45,Y46,Y47,Y49&format=json'
        }
        schedule => {
          every => "2m"
        }
        codec => "json"
      }
    }

    filter {
      json {
        source => "bustime-response.vehicle"
      }
      split {
        field => "[bustime-response][vehicle]"
      }
      mutate {
        add_field => { "[bustime-response][vehicle][geo_location]" => "%{[bustime-response][vehicle][lat]},%{[bustime-response][vehicle][lon]}" }
        add_field => { "[bustime-response][vehicle][bk_tmstmp]" => "%{[bustime-response][vehicle][tmstmp]}"}
      }
      date { 
        match => [ "[bustime-response][vehicle][tmstmp]", "yyyyMMdd HH:mm", "yyyyMMdd H:m"]
        target => "[bustime-response][vehicle][tmstmp]"
        timezone => "America/New_York"
      }
    }

    output {
      elasticsearch {
        hosts => [ "${ES_HOSTS}" ]
        user => "${ES_USER}"
        password => "${ES_PASSWORD}"
        cacert => '/etc/logstash/certificates/ca.crt'
        index => "transit-pittsburgh-%{+YYYY.MM.dd}"
      }
    }
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: logstash
  labels:
    app.kubernetes.io/name: eck-logstash
    app.kubernets.io/component: logstash
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: eck-logstash
      app.kubernets.io/component: logstash
  template:
    metadata:
      labels:
        app.kubernetes.io/name: eck-logstash
        app.kubernets.io/component: logstash
    spec:
      containers:
        - name: logstash
          image: docker.elastic.co/logstash/logstash:7.9.2
          env:
            - name: ES_HOSTS
              value: "https://elasticsearch-es-http.default.svc:9200"
            - name: ES_USER
              value: "elastic"
            - name: TRANSIT_ID
              value: ""
            - name: ES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: elasticsearch-es-elastic-user
                  key: elastic
          volumeMounts:
            - name: config-volume
              mountPath: /usr/share/logstash/config
            - name: pipeline-volume
              mountPath: /usr/share/logstash/pipeline
            - name: ca-certs
              mountPath: /etc/logstash/certificates
              readOnly: true
      volumes:
        - name: config-volume
          configMap:
            name: logstash-config
        - name: pipeline-volume
          configMap:
            name: logstash-pipeline
        - name: ca-certs
          secret:
            secretName: elasticsearch-es-http-certs-public
---
apiVersion: v1
kind: Service
metadata:
  name: logstash
  labels:
    app.kubernetes.io/name: eck-logstash
    app.kubernets.io/component: logstash
spec:
  selector:
    app.kubernetes.io/name: eck-logstash
    app.kubernets.io/component: logstash